@using Microsoft.AspNetCore.Identity
@inject UserManager<User> userManager
@inject SignInManager<User> signInManager
@inject IOrderService orderService
@{
    var orderCount = this.orderService.GetUserOrderCount(this.userManager.GetUserAsync(this.User).Result?.Id);
}

<ul class="navbar-nav">
    @if (this.signInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name!</a>
            @if (this.User.Identity.IsAuthenticated)
            {
                @if (orderCount == null || orderCount <= 0)
                {
                    <a class="nav-link">Your cart is empty.</a>
                }
                else
                {
                    <a class="nav-link" asp-area="" asp-controller="Order" asp-action="All">@($"{orderCount} item/s in cart")</a>
                }
            }
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
